controllable prepareA;
controllable eatA;
controllable switchA;
automaton processA:
  alphabet prepareA, eatA, switchA;
  location s1:
    initial;
    marked;
    edge prepareA goto s2;
  location s2:
    marked;
    edge switchA goto s3;
  location s3:
    marked;
    edge eatA goto s1;
end

controllable prepareB;
controllable eatB;
controllable switchB;
automaton processB:
  alphabet prepareB, eatB, switchB;
  location s1:
    initial;
    marked;
    edge prepareB goto s2;
  location s2:
    marked;
    edge switchB goto s3;
  location s3:
    marked;
    edge eatB goto s1;
end

automaton globalMonitor:
	monitor;
	location s1:
		initial;
		marked;
		edge prepareA, prepareB goto s3;
	location s2:
		marked;
		edge prepareA, prepareB, eatA, eatB goto s3;
    location s3:
        marked;
        edge switchA goto s2;
end

invariant switchB needs ( processB.s2 and ( globalMonitor.s3 )and ( processA.s3 )) or not processB.s2;
invariant switchA needs ( processA.s2 and ( processB.s2 )) or not processA.s2;


